From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Davis Goodin <dagood@microsoft.com>
Date: Thu, 28 Sep 2023 23:39:50 -0500
Subject: [PATCH] Add PBKDF2, MD4

---
 src/crypto/internal/backend/boring_linux.go  | 9 +++++++++
 src/crypto/internal/backend/cng_windows.go   | 9 +++++++++
 src/crypto/internal/backend/nobackend.go     | 9 +++++++++
 src/crypto/internal/backend/openssl_linux.go | 9 +++++++++
 4 files changed, 36 insertions(+)

diff --git a/src/crypto/internal/backend/boring_linux.go b/src/crypto/internal/backend/boring_linux.go
index 35e1d00d29980d..86e74b68f87c77 100644
--- a/src/crypto/internal/backend/boring_linux.go
+++ b/src/crypto/internal/backend/boring_linux.go
@@ -159,3 +159,12 @@ func SupportsTLS1PRF() bool { return false }
 func TLS1PRF(result, secret, label, seed []byte, h func() hash.Hash) error {
 	panic("cryptobackend: not available")
 }
+
+func SupportsPBKDF2() bool { return false }
+
+func PBKDF2(password, salt []byte, iter, keyLen int, h func() hash.Hash) ([]byte, error) {
+	panic("cryptobackend: not available")
+}
+
+func NewMD4() hash.Hash           { panic("cryptobackend: not available") }
+func MD4(p []byte) (sum [16]byte) { panic("cryptobackend: not available") }
diff --git a/src/crypto/internal/backend/cng_windows.go b/src/crypto/internal/backend/cng_windows.go
index b21f212d7d19d2..efec8b885694de 100644
--- a/src/crypto/internal/backend/cng_windows.go
+++ b/src/crypto/internal/backend/cng_windows.go
@@ -257,3 +257,12 @@ func SupportsTLS1PRF() bool {
 func TLS1PRF(result, secret, label, seed []byte, h func() hash.Hash) error {
 	return cng.TLS1PRF(result, secret, label, seed, h)
 }
+
+func SupportsPBKDF2() bool { return true }
+
+func PBKDF2(password, salt []byte, iter, keyLen int, h func() hash.Hash) ([]byte, error) {
+	return cng.PBKDF2(password, salt, iter, keyLen, h)
+}
+
+func NewMD4() hash.Hash           { return cng.NewMD4() }
+func MD4(p []byte) (sum [16]byte) { return cng.MD4(p) }
diff --git a/src/crypto/internal/backend/nobackend.go b/src/crypto/internal/backend/nobackend.go
index 4a7c4893b2357f..82ab6505583d34 100644
--- a/src/crypto/internal/backend/nobackend.go
+++ b/src/crypto/internal/backend/nobackend.go
@@ -141,3 +141,12 @@ func SupportsTLS1PRF() bool { panic("cryptobackend: not available") }
 func TLS1PRF(result, secret, label, seed []byte, h func() hash.Hash) error {
 	panic("cryptobackend: not available")
 }
+
+func SupportsPBKDF2() bool { panic("cryptobackend: not available") }
+
+func PBKDF2(password, salt []byte, iter, keyLen int, h func() hash.Hash) ([]byte, error) {
+	panic("cryptobackend: not available")
+}
+
+func NewMD4() hash.Hash           { panic("cryptobackend: not available") }
+func MD4(p []byte) (sum [16]byte) { panic("cryptobackend: not available") }
diff --git a/src/crypto/internal/backend/openssl_linux.go b/src/crypto/internal/backend/openssl_linux.go
index 39ad98afdb9bc7..99802ebfde7ddf 100644
--- a/src/crypto/internal/backend/openssl_linux.go
+++ b/src/crypto/internal/backend/openssl_linux.go
@@ -275,3 +275,12 @@ func SupportsTLS1PRF() bool {
 func TLS1PRF(result, secret, label, seed []byte, h func() hash.Hash) error {
 	return openssl.TLS1PRF(result, secret, label, seed, h)
 }
+
+func SupportsPBKDF2() bool { return true }
+
+func PBKDF2(password, salt []byte, iter, keyLen int, h func() hash.Hash) ([]byte, error) {
+	return openssl.PBKDF2(password, salt, iter, keyLen, h)
+}
+
+func NewMD4() hash.Hash           { return openssl.NewMD4() }
+func MD4(p []byte) (sum [16]byte) { return openssl.MD4(p) }
