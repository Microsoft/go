From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: microsoft-golang-bot <microsoft-golang-bot@users.noreply.github.com>
Date: Wed, 30 Mar 2022 18:14:08 -0500
Subject: [PATCH] Integrate OpenSSL module

---
 src/cmd/link/internal/ld/lib.go  | 2 +-
 src/crypto/aes/cipher.go         | 2 +-
 src/crypto/aes/cipher_asm.go     | 2 +-
 src/crypto/boring/boring.go      | 2 +-
 src/crypto/ecdsa/boring.go       | 2 +-
 src/crypto/ecdsa/ecdsa.go        | 2 +-
 src/crypto/hmac/hmac.go          | 2 +-
 src/crypto/hmac/hmac_test.go     | 2 +-
 src/crypto/rand/rand_unix.go     | 2 +-
 src/crypto/rsa/boring.go         | 2 +-
 src/crypto/rsa/pkcs1v15.go       | 2 +-
 src/crypto/rsa/pss.go            | 2 +-
 src/crypto/rsa/rsa.go            | 2 +-
 src/crypto/rsa/rsa_test.go       | 2 +-
 src/crypto/sha1/boring.go        | 4 ++--
 src/crypto/sha1/sha1_test.go     | 2 +-
 src/crypto/sha256/sha256.go      | 2 +-
 src/crypto/sha256/sha256_test.go | 2 +-
 src/crypto/sha512/sha512.go      | 2 +-
 src/crypto/sha512/sha512_test.go | 2 +-
 src/crypto/tls/boring.go         | 4 ++--
 src/crypto/tls/cipher_suites.go  | 2 +-
 src/runtime/runtime_boring.go    | 5 +++++
 23 files changed, 29 insertions(+), 24 deletions(-)

diff --git a/src/cmd/link/internal/ld/lib.go b/src/cmd/link/internal/ld/lib.go
index 81efc8f4a0..7eee8fd62f 100644
--- a/src/cmd/link/internal/ld/lib.go
+++ b/src/cmd/link/internal/ld/lib.go
@@ -1019,7 +1019,7 @@ var hostobj []Hostobj
 // These packages can use internal linking mode.
 // Others trigger external mode.
 var internalpkg = []string{
-	"crypto/internal/boring",
+	"vendor/github.com/microsoft/go-crypto-openssl/openssl",
 	"crypto/x509",
 	"net",
 	"os/user",
diff --git a/src/crypto/aes/cipher.go b/src/crypto/aes/cipher.go
index 29d01796eb..f3680ad6b4 100644
--- a/src/crypto/aes/cipher.go
+++ b/src/crypto/aes/cipher.go
@@ -10,7 +10,7 @@ import (
 	"strconv"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 // The AES block size in bytes.
 const BlockSize = 16
diff --git a/src/crypto/aes/cipher_asm.go b/src/crypto/aes/cipher_asm.go
index 4936699481..d1cfb99654 100644
--- a/src/crypto/aes/cipher_asm.go
+++ b/src/crypto/aes/cipher_asm.go
@@ -12,7 +12,7 @@ import (
 	"internal/cpu"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 // defined in asm_*.s
 
diff --git a/src/crypto/boring/boring.go b/src/crypto/boring/boring.go
index 19e2a0876f..2829231f4a 100644
--- a/src/crypto/boring/boring.go
+++ b/src/crypto/boring/boring.go
@@ -11,7 +11,7 @@
 // is satisfied, so that applications can tag files that use this package.
 package boring
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 // Enabled reports whether BoringCrypto handles supported crypto operations.
 func Enabled() bool {
diff --git a/src/crypto/ecdsa/boring.go b/src/crypto/ecdsa/boring.go
index fa15ecb850..92c42e28d5 100644
--- a/src/crypto/ecdsa/boring.go
+++ b/src/crypto/ecdsa/boring.go
@@ -5,7 +5,7 @@
 package ecdsa
 
 import (
-	"crypto/internal/boring"
+	boring "crypto/internal/backend"
 	"math/big"
 	"sync/atomic"
 	"unsafe"
diff --git a/src/crypto/ecdsa/ecdsa.go b/src/crypto/ecdsa/ecdsa.go
index 04738cdbd7..755ebdce00 100644
--- a/src/crypto/ecdsa/ecdsa.go
+++ b/src/crypto/ecdsa/ecdsa.go
@@ -42,7 +42,7 @@ import (
 )
 
 import (
-	"crypto/internal/boring"
+	boring "crypto/internal/backend"
 	"unsafe"
 )
 
diff --git a/src/crypto/hmac/hmac.go b/src/crypto/hmac/hmac.go
index 34805765d5..79fd58d0da 100644
--- a/src/crypto/hmac/hmac.go
+++ b/src/crypto/hmac/hmac.go
@@ -26,7 +26,7 @@ import (
 	"hash"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 // FIPS 198-1:
 // https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf
diff --git a/src/crypto/hmac/hmac_test.go b/src/crypto/hmac/hmac_test.go
index 55415abf02..904925377b 100644
--- a/src/crypto/hmac/hmac_test.go
+++ b/src/crypto/hmac/hmac_test.go
@@ -6,7 +6,7 @@ package hmac
 
 import (
 	"bytes"
-	"crypto/internal/boring"
+	boring "crypto/internal/backend"
 	"crypto/md5"
 	"crypto/sha1"
 	"crypto/sha256"
diff --git a/src/crypto/rand/rand_unix.go b/src/crypto/rand/rand_unix.go
index 8bc4abf40c..97292f2439 100644
--- a/src/crypto/rand/rand_unix.go
+++ b/src/crypto/rand/rand_unix.go
@@ -22,7 +22,7 @@ import (
 	"time"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 const urandomDevice = "/dev/urandom"
 
diff --git a/src/crypto/rsa/boring.go b/src/crypto/rsa/boring.go
index 0f362a2f16..856bc26aea 100644
--- a/src/crypto/rsa/boring.go
+++ b/src/crypto/rsa/boring.go
@@ -5,7 +5,7 @@
 package rsa
 
 import (
-	"crypto/internal/boring"
+	boring "crypto/internal/backend"
 	"math/big"
 	"sync/atomic"
 	"unsafe"
diff --git a/src/crypto/rsa/pkcs1v15.go b/src/crypto/rsa/pkcs1v15.go
index 213ddb4add..5a44b4a71c 100644
--- a/src/crypto/rsa/pkcs1v15.go
+++ b/src/crypto/rsa/pkcs1v15.go
@@ -14,7 +14,7 @@ import (
 	"crypto/internal/randutil"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 // This file implements encryption and decryption using PKCS #1 v1.5 padding.
 
diff --git a/src/crypto/rsa/pss.go b/src/crypto/rsa/pss.go
index cda1eafd6e..6ece320379 100644
--- a/src/crypto/rsa/pss.go
+++ b/src/crypto/rsa/pss.go
@@ -15,7 +15,7 @@ import (
 	"math/big"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 // Per RFC 8017, Section 9.1
 //
diff --git a/src/crypto/rsa/rsa.go b/src/crypto/rsa/rsa.go
index eece385981..bc1477aea2 100644
--- a/src/crypto/rsa/rsa.go
+++ b/src/crypto/rsa/rsa.go
@@ -36,7 +36,7 @@ import (
 )
 
 import (
-	"crypto/internal/boring"
+	boring "crypto/internal/backend"
 	"unsafe"
 )
 
diff --git a/src/crypto/rsa/rsa_test.go b/src/crypto/rsa/rsa_test.go
index 766d9a954f..f2602b94ab 100644
--- a/src/crypto/rsa/rsa_test.go
+++ b/src/crypto/rsa/rsa_test.go
@@ -15,7 +15,7 @@ import (
 	"testing"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 func TestKeyGeneration(t *testing.T) {
 	for _, size := range []int{128, 1024, 2048, 3072} {
diff --git a/src/crypto/sha1/boring.go b/src/crypto/sha1/boring.go
index 44c26092ee..ed00d7cd8f 100644
--- a/src/crypto/sha1/boring.go
+++ b/src/crypto/sha1/boring.go
@@ -11,11 +11,11 @@
 package sha1
 
 import (
-	"crypto/internal/boring"
+	boring "crypto/internal/backend"
 	"hash"
 )
 
-const boringEnabled = boring.Enabled
+var boringEnabled = boring.Enabled
 
 func boringNewSHA1() hash.Hash { return boring.NewSHA1() }
 
diff --git a/src/crypto/sha1/sha1_test.go b/src/crypto/sha1/sha1_test.go
index 8e7a3d339c..fb908d5353 100644
--- a/src/crypto/sha1/sha1_test.go
+++ b/src/crypto/sha1/sha1_test.go
@@ -16,7 +16,7 @@ import (
 	"testing"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 type sha1Test struct {
 	out       string
diff --git a/src/crypto/sha256/sha256.go b/src/crypto/sha256/sha256.go
index 8b54a427d7..c6aa7a3788 100644
--- a/src/crypto/sha256/sha256.go
+++ b/src/crypto/sha256/sha256.go
@@ -13,7 +13,7 @@ import (
 	"hash"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 func init() {
 	crypto.RegisterHash(crypto.SHA224, New224)
diff --git a/src/crypto/sha256/sha256_test.go b/src/crypto/sha256/sha256_test.go
index 13178fb21f..5800e0f55a 100644
--- a/src/crypto/sha256/sha256_test.go
+++ b/src/crypto/sha256/sha256_test.go
@@ -16,7 +16,7 @@ import (
 	"testing"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 type sha256Test struct {
 	out       string
diff --git a/src/crypto/sha512/sha512.go b/src/crypto/sha512/sha512.go
index 1a2cef317c..b6b390a1b8 100644
--- a/src/crypto/sha512/sha512.go
+++ b/src/crypto/sha512/sha512.go
@@ -17,7 +17,7 @@ import (
 	"hash"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 func init() {
 	crypto.RegisterHash(crypto.SHA384, New384)
diff --git a/src/crypto/sha512/sha512_test.go b/src/crypto/sha512/sha512_test.go
index 6964bef8f7..255c51f3a7 100644
--- a/src/crypto/sha512/sha512_test.go
+++ b/src/crypto/sha512/sha512_test.go
@@ -17,7 +17,7 @@ import (
 	"testing"
 )
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 type sha512Test struct {
 	out       string
diff --git a/src/crypto/tls/boring.go b/src/crypto/tls/boring.go
index d61deb5b81..d4b67bb692 100644
--- a/src/crypto/tls/boring.go
+++ b/src/crypto/tls/boring.go
@@ -6,14 +6,14 @@ package tls
 
 import (
 	"crypto/ecdsa"
-	"crypto/internal/boring"
+	boring "crypto/internal/backend"
 	"crypto/internal/boring/fipstls"
 	"crypto/rsa"
 	"crypto/x509"
 )
 
 // boringEnabled is an alias of boring.Enabled to avoid a new import in common.go.
-const boringEnabled = boring.Enabled
+var boringEnabled = boring.Enabled
 
 // needFIPS returns fipstls.Required(); it avoids a new import in common.go.
 func needFIPS() bool {
diff --git a/src/crypto/tls/cipher_suites.go b/src/crypto/tls/cipher_suites.go
index 6596562fb1..9e8960671e 100644
--- a/src/crypto/tls/cipher_suites.go
+++ b/src/crypto/tls/cipher_suites.go
@@ -4,7 +4,7 @@
 
 package tls
 
-import "crypto/internal/boring"
+import boring "crypto/internal/backend"
 
 import (
 	"crypto"
diff --git a/src/runtime/runtime_boring.go b/src/runtime/runtime_boring.go
index 5a98b20253..9042f2c279 100644
--- a/src/runtime/runtime_boring.go
+++ b/src/runtime/runtime_boring.go
@@ -17,3 +17,8 @@ func boring_runtime_arg0() string {
 
 //go:linkname fipstls_runtime_arg0 crypto/internal/boring/fipstls.runtime_arg0
 func fipstls_runtime_arg0() string { return boring_runtime_arg0() }
+
+//go:linkname crypto_backend_runtime_arg0 crypto/internal/backend.runtime_arg0
+func crypto_backend_runtime_arg0() string {
+	return boring_runtime_arg0()
+}
