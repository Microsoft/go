From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: microsoft-golang-bot <microsoft-golang-bot@users.noreply.github.com>
Date: Tue, 15 Mar 2022 18:30:30 -0500
Subject: [PATCH] Skip TestScript/gopath_std_vendor: vendored OpenSSL module
 interferes

This test's program is only intended to import
golang.org/x/net/http2/hpack. However, it ends up importing
github.com/microsoft/go-crypto-openssl, too, starting in go1.18. This is
caused by the fuzz testing functionality. The dependency chain is:

internal/fuzz -> crypto/sha256 -> crypto/internal/backend ->
vendor/github.com/microsoft/go-crypto-openssl/openssl

The gopath_std_vendor test doesn't test specifically for
golang.org/x/net/http2/hpack import when checking dependency paths, so
the vendored openssl module interferes and makes the test fail.

Skip the test entirely, for now: we are unlikely to cause a regression
in this functionality in the microsoft/go repository. See
https://github.com/microsoft/go/issues/481
---
 src/cmd/go/testdata/script/gopath_std_vendor.txt | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/cmd/go/testdata/script/gopath_std_vendor.txt b/src/cmd/go/testdata/script/gopath_std_vendor.txt
index a0a41a50de..8c39d9a2bd 100644
--- a/src/cmd/go/testdata/script/gopath_std_vendor.txt
+++ b/src/cmd/go/testdata/script/gopath_std_vendor.txt
@@ -1,6 +1,7 @@
 env GO111MODULE=off
 
 [!gc] skip
+skip 'This test uses a test program that is intended to import no vendored libraries other than golang.org/x/net/http2/hpack, but this is not true in microsoft/go boring 1.18+. https://github.com/microsoft/go/issues/481'
 
 go list -f '{{.Dir}}' vendor/golang.org/x/net/http2/hpack
 stdout $GOPATH[/\\]src[/\\]vendor
